html {
  scroll-behavior: smooth;
}

@property --k {
	syntax: '<number>';
	initial-value: -1;
	inherits: true
}

@property --ang {
	syntax: '<angle>';
	initial-value: 0deg;
	inherits: false
}

* { 
  margin: 0;
  box-sizing: border-box;
}

html {
	scrollbar-width: none;
	height: calc(var(--n)*100%)
}

body, header, main, section, 
article, figure { 
  display: grid;
  will-change: transform, opacity;
}

body {
  --dir: 0;
  grid-template-rows: max-content 1fr max-content;
  position: fixed;
  width: 100%;
  height: 100vh;
  height: 100dvh;
  color: #dedede;
  font: clamp(.625em, 3vmin, 1.5em)/1.25 saira, sans-serif;
  animation: k 1s linear;
  animation-timeline: scroll();
  background: radial-gradient(ellipse at bottom, #1a1a1a 0%, #000000 100%);
  background-attachment: fixed;
  background-size: cover;

  &::before {
    position: absolute;
    inset: 0;
    z-index: -1;
    background:
      linear-gradient(to bottom, rgba(0, 0, 0, 0.8), rgba(10, 10, 10, 0.9)),
      url(https://i.postimg.cc/x16d4nNX/6197314b65793f5155913e84b8f2170f-1.gif); /* imagem */
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    filter: brightness(0.9) contrast(1.1) blur(0px);
    mix-blend-mode: overlay;
    content: '';
  }

  @media (max-aspect-ratio: 2/3) {
    --dir: 1;
  }
}



@keyframes k { to { --k: 1 } }

svg[height='0'][aria-hidden='true'] { position: fixed }

header {
	place-content: center;
	place-items: center;
	padding: .5em;
	text-align: center;
	text-wrap: balance
}

em { max-width: 32em }

main {
	overflow: hidden;
	perspective: 50em
}

section, article { 
  transform-style: preserve-3d;
  will-change: transform;
}

section {   /*tamanho imagens*/
	--r: calc(2 + var(--dir))/ 3;
	--w: clamp(2em, min(20vh, 25vw), 18em);
	--z: calc(var(--f, 1.25)*-.5*var(--w)/tan(.5turn/var(--n)));
	place-self: center;
	translate: 0 0 var(--z);
	rotate: var(--dir) calc(1 - var(--dir)) 0 calc((var(--k) + .5)*-1turn);
}

article, header, figure, img { grid-area: 1/ 1 }

article {
  /* item progress value */
	--j: var(--i)/var(--n);
	/* linear difference between this item's progress value  
	 * and progress value of highlighted item in front - 
	 * it's a value in the [0, 1] interval */
	--dif-lin: calc(var(--j) - mod(var(--k) + 1, 1));
	/* absolute value of linear difference */
	--abs-lin: abs(var(--dif-lin));
	/* difference between middle & absolute linear difference */
	--dif-mid: calc(.5 - var(--abs-lin));
	--abs-mid: abs(var(--dif-mid));
	/* relative distance to from this item 
	 * to highlighted one in front */
	--dif-arc: calc(2*(.5 - var(--abs-mid)));
	/* relative distance limit */
	--lim: .35;
	--sel: max(0, calc((var(--lim) - var(--dif-arc))/var(--lim)));
	--out: calc(1 - var(--sel));
	--hov: 0;
	width: var(--w);
	aspect-ratio: var(--r);
	transform: 
		rotate3d(var(--dir), calc(1 - var(--dir)), 0, calc(var(--j)*1turn))
		translatez(var(--z))
    translateY(-30vh)
		rotate(calc(var(--dir)*.5turn));
  transition: transform 0.3s ease, box-shadow 0.3s ease;
	
	header { rotate: y calc(var(--hov)*.5turn) }
	
	&:hover, &:focus-within { --hov: round(var(--sel)) }
	
	&:active {
    transform: 
      rotate3d(var(--dir), calc(1 - var(--dir)), 0, calc(var(--j)*1turn))
      translatez(var(--z))
      translateY(-30vh)
      rotate(calc(var(--dir)*.5turn))
      scale(0.95);
  }
	
	@supports not (scale: abs(-1)) {
		--abs-lin: max(var(--dif-lin), -1*var(--dif-lin));
		--abs-mid: max(var(--dif-mid), -1*var(--dif-mid))
	}
}

article header, figure {
	--ang: calc(-45deg + var(--hov)*180deg);
	overflow: hidden;
	position: relative;
	border: solid 4px #0000;
	border-radius: .5em;
	backface-visibility: hidden;
	box-shadow: 5px 5px 13px #000;
	background: 
		var(--url) 50%/ cover padding-box, 
		linear-gradient(#333 0 0) padding-box, 
		repeating-conic-gradient(from var(--ang), 
				#0000 0% 15%, 
				color-mix(in srgb, 
					#f48c06 calc(var(--sel)*100%), #333) 20% 30%, 
				#0000 35% 50%) 
			border-box #121212;
	background-blend-mode: multiply, normal, normal;
	isolation: isolate;
	pointer-events: none;
	transition: .35s ease-out;
	transition-property: rotate, --ang;
	
	&::after {
		position: absolute;
		inset: 0;
		opacity: var(--out);
		background: #03071e;
		mix-blend-mode: color;
		pointer-events: none;
		content: ''
	}
}

h2, em, img, a { pointer-events: auto }

h2, em { opacity: round(up, var(--sel)) }

h2 { 
  font-size: 1em;
  font-weight: bold;
  color: #f48c06;
  text-shadow: 2px 2px 10px #000;
  text-align: center;
  margin-top: 1em;
  animation: fadeInTitle 1s ease-in-out;
}

@keyframes fadeInTitle {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

figure { rotate: y calc((1 + var(--hov))*.5turn) }

img {
	width: 100%;
	height: 100%;
	aspect-ratio: var(--r);
	object-fit: cover;
	object-position: var(--pos);
  loading: lazy;
}

/* Selection controls */
.selection-controls {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: rgba(0, 0, 0, 0.9);
  padding: 15px;
  z-index: 100;
  text-align: center;
  color: white;
  transition: transform 0.3s ease;
}

.selection-controls.hidden {
  transform: translateY(100%);
}

.selected-characters {
  margin-bottom: 15px;
}

.selected-list {
  display: flex;
  justify-content: center;
  gap: 10px;
  margin-top: 10px;
}

.selected-list img {
  width: 60px;
  height: 60px;
  object-fit: cover;
  border-radius: 5px;
  border: 2px solid #4CAF50;
  transition: transform 0.2s ease;
}

.selected-list img:hover {
  transform: scale(1.1);
}

#confirm-selection {
  background-color: #4CAF50;
  color: white;
  padding: 10px 20px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 16px;
  transition: background-color 0.3s ease;
}

#confirm-selection:hover:not(:disabled) {
  background-color: #45a049;
}

#confirm-selection:disabled {
  background-color: #cccccc;
  cursor: not-allowed;
}

/* Batalha */
.battle-view {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: #111;
  z-index: 200;
  padding: 20px;
  color: white;
  overflow-y: auto;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.5s ease;
  overflow: hidden; /* ✅ Para conter o ::before */
}

.battle-view::before {
  content: '';
  position: absolute;
  inset: 0;
  z-index: -1;
  background: 
    linear-gradient(to top, rgba(0, 0, 0, 0.8), rgba(0, 10, 20, 0.9)),
    url('https://i.postimg.cc/DfNZfJJc/pinterest-video90.gif'); /* Você pode trocar essa imagem */
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  mix-blend-mode: lighten;
  filter: brightness(0.8) blur(2px);
  animation: moveFog 30s linear infinite;
  opacity: 0.6;
}

.battle-view.active {
  opacity: 1;
  pointer-events: all;
}

.teams-container {
  display: flex;
  justify-content: space-around;
  margin: 30px 0;
  flex-wrap: wrap;
  gap: 20px;
}

.team {
  width: 100%;
  max-width: 700px;
  text-align: center;
}

.team-members {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  gap: 20px;
  margin-top: 20px;
}

.team-character {
  flex: 1 1 200px;
  max-width: 220px;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: center;
  background: rgba(255, 255, 255, 0.05);
  border: 1px solid rgba(255, 255, 255, 0.1);
  border-radius: 16px;
  padding: 12px;
  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);
  backdrop-filter: blur(10px);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.team-character:hover {
  transform: translateY(-6px);
  box-shadow: 0 12px 28px rgba(0, 0, 0, 0.5);
}

.team-character img {
  width: 200px;
  height: 350px;
  object-fit: cover;
  border-radius: 10px;
  border: 4px solid;
  transition: all 0.3s ease;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.4);
  overflow: hidden;
}

.user-team .team-character img {
  border-color: #4CAF50;
}

.cpu-team .team-character img {
  border-color: #F44336;
}






/* Battle animations */
@keyframes win {
  0% { transform: scale(1); }
  50% { transform: scale(1.1); }
  100% { transform: scale(1); }
}

@keyframes lose {
  0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; }
}

.winner {
  animation: win 0.5s 3;
  border-color: gold !important;
  box-shadow: 0 0 15px gold;
}

.loser {
  animation: lose 0.5s 3;
  filter: grayscale(70%);
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .teams-container {
    flex-direction: column;
    align-items: center;
  }
  
  .team {
    width: 100%;
  }
  
  .team-character {
    min-width: 100px;
  }
  
  .team-character img {
    width: 80px;
    height: 80px;
  }
}

/* Fallback for browsers without scroll-driven animations */
.box-info-scrollani {
	margin: .5em;
	border-left: solid 5px #dc3055;
	padding: .75em;
	box-shadow: 2px 2px 5px hsla(0, 0%, 0%, .35);
	background: #851d40;
	color: #fff;
	font: 1em/ 1.25 ubuntu, trebuchet ms, arial, sans-serif;
	
	@supports (animation-timeline: scroll()) { display: none }
}


/* Estilos para os botões */
.button {
  position: relative;
  padding: 12px 24px;
  border: none;
  border-radius: 50px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.4s ease;
  overflow: hidden;
  z-index: 1;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  text-transform: uppercase;
  letter-spacing: 1px;
  background: linear-gradient(135deg, #f48c06 0%, #e67e00 100%);
  color: white;
  position: relative;
  overflow: hidden;
}

/* Efeito para o botão desabilitado */
.button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  transform: none !important;
  box-shadow: none;
  background: #cccccc;
}

/* Efeito hover - animação de elevação e sombra */
.button:hover:not(:disabled) {
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

/* Efeito de pressionado */
.button:active:not(:disabled) {
  transform: translateY(2px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Animação de brilho e fundo no hover */
.button::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 300%;
  height: 300%;
  background: rgba(255, 255, 255, 0.15);
  border-radius: 50%;
  transform: translate(-50%, -50%) scale(0);
  transition: transform 0.6s, opacity 0.3s ease;
  opacity: 0;
  z-index: -1;
}

.button:hover::after {
  opacity: 1;
  transform: translate(-50%, -50%) scale(1);
}

/* Adicionando um efeito de gradiente animado no hover */
.button:hover {
  background: linear-gradient(45deg, #f48c06 0%, #e67e00 100%);
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

/* Foco (para acessibilidade) */
.button:focus {
  outline: none;
  box-shadow: 0 0 0 4px rgba(255, 255, 255, 0.4), 0 0 0 8px rgba(72, 138, 255, 0.6);
}

/* Adicionando a transição do fundo */
.button::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, #f48c06 0%, #e67e00 100%);
  opacity: 0;
  transition: opacity 0.4s ease-in-out;
  z-index: -2;
}

.button:hover::before {
  opacity: 1;
}

/* Botão de confirmação */
#confirm-selection {
  background: linear-gradient(135deg, #4CAF50 0%, #2E7D32 100%);
  color: white;
  border: 2px solid #388E3C;
  padding: 12px 24px;
  border-radius: 50px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  text-transform: uppercase;
  letter-spacing: 1px;
}

#confirm-selection:hover {
  background: linear-gradient(135deg, #66BB6A 0%, #388E3C 100%);
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

#confirm-selection:active {
  transform: translateY(1px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}


/* Botão de revanche */
#rematch-button {
  background: linear-gradient(135deg, #2196F3 0%, #0D47A1 100%);
  color: white;
  border: 2px solid #1565C0;
  padding: 12px 24px;
  border-radius: 50px;
  font-size: 16px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  text-transform: uppercase;
  letter-spacing: 1px;
  margin: 0 10px;
}

#rematch-button:hover {
  background: linear-gradient(135deg, #42A5F5 0%, #1E88E5 100%);
  transform: translateY(-5px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
}

#rematch-button:active {
  transform: translateY(1px);
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

/* Botão de remover personagem */
.remove-character {
  position: absolute;
  top: 5px;
  right: 5px;
  width: 28px;
  height: 28px;
  background: #F44336;
  color: white;
  border: none;
  border-radius: 50%;
  font-size: 14px;
  font-weight: bold;
  cursor: pointer;
  opacity: 0; /* Começa invisível */
  transition: all 0.3s ease;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 2;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
}

.remove-character:hover {
  background: #D32F2F;
  transform: scale(1.2);
  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.3);
}

.remove-character:active {
  transform: scale(0.95);
  box-shadow: 0 3px 5px rgba(0, 0, 0, 0.1);
}

/* Exibição do botão ao passar o mouse na carta */
.selected-character-container:hover .remove-character {
  opacity: 1; /* Torna visível quando o mouse passa sobre a carta */
}

/* Estilização da carta para garantir que o botão fique em cima dela */
.selected-character-container {
  position: relative; /* Necessário para o posicionamento absoluto do botão */
  display: inline-block;
  width: 150px;  /* Ajuste conforme o tamanho da carta */
  height: 200px; /* Ajuste conforme o tamanho da carta */
  margin: 10px;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  overflow: hidden; /* Para garantir que o botão de remover não saia da área da carta */
}

.selected-character-container img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  border-radius: 8px;
}


/* Container de resultado da batalha */
.battle-result {
  text-align: center;
  margin: 30px 0;
  animation: fadeIn 0.5s ease;
  padding: 20px;
  background: rgba(0, 0, 0, 0.1);
  border-radius: 8px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  position: fixed; /* ou absolute, dependendo da necessidade */
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

/* Título da batalha (H3) */
.battle-result h3 {
  font-size: 26px;
  margin-bottom: 20px;
  color: #FFD700;
  text-shadow: 0 3px 6px rgba(0, 0, 0, 0.4);
  font-family: 'Arial', sans-serif;
  font-weight: 700;
}



/* Efeitos de vitória e derrota */
.winner {
  position: relative;
  color: #4CAF50; /* Cor verde para vencedor */
  font-weight: bold;
  font-size: 26px;
  text-shadow: 0 4px 8px rgba(0, 0, 0, 0.5);
  animation: fadeInWinner 0.5s ease, glowWinner 1s ease infinite, bounceTrophy 1s ease infinite;
}

.winner::after {
  content: '🏆';
  position: absolute;
  top: -20px;
  right: -20px;
  font-size: 40px;
  animation: rotateTrophy 1s ease infinite, bounce 0.5s ease infinite alternate;
  color: #FFD700;
}

.loser {
  color: #F44336; /* Cor vermelha para perdedor */
  font-weight: bold;
  font-size: 22px;
  text-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
  filter: grayscale(70%) brightness(0.5);
  opacity: 0.6;
  animation: fadeInLoser 0.5s ease, shakeLoser 0.6s ease infinite;
}

/* Animações */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes fadeInWinner {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInLoser {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Efeitos de "glow" e "brilho" para o vencedor */
@keyframes glowWinner {
  0% {
    text-shadow: 0 0 10px #4CAF50, 0 0 20px #4CAF50, 0 0 30px #4CAF50;
  }
  50% {
    text-shadow: 0 0 20px #FFD700, 0 0 30px #FFD700, 0 0 40px #FFD700;
  }
  100% {
    text-shadow: 0 0 10px #4CAF50, 0 0 20px #4CAF50, 0 0 30px #4CAF50;
  }
}

/* Animação de "shake" para o perdedor (efeito tremendo) */
@keyframes shakeLoser {
  0%   { transform: translateX(0); }
  25%  { transform: translateX(-4px); }
  50%  { transform: translateX(4px); }
  75%  { transform: translateX(-4px); }
  100% { transform: translateX(0); }
}


/* Efeito de "bounce" para o troféu */
@keyframes bounce {
  0% {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-10px);
  }
  100% {
    transform: translateY(0);
  }
}

/* Efeito de "rotate" para o troféu */
@keyframes rotateTrophy {
  0% {
    transform: rotate(0deg);
  }
  50% {
    transform: rotate(15deg);
  }
  100% {
    transform: rotate(0deg);
  }
}

/* Efeito de "escala" para o troféu (vibração) */
@keyframes bounceTrophy {
  0%   { transform: scale(1); }
  25%  { transform: scale(1.05); }
  50%  { transform: scale(1); }
  75%  { transform: scale(1.05); }
  100% { transform: scale(1); }
}



/* Animações */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes bounce {
  from { transform: translateY(0) scale(1); }
  to { transform: translateY(-10px) scale(1.2); }
}

@keyframes pulse {
  0% { transform: scale(1); }
  50% { transform: scale(1.02); } /* só 2% agora */
  100% { transform: scale(1); }
}


/* Efeito de confete */
.confetti-container {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1000;
}

.confetti {
  position: absolute;
  width: 10px;
  height: 10px;
  background-color: #f00;
  opacity: 0;
  animation: confetti-fall 3s ease-in-out forwards;
}

@keyframes confetti-fall {
  0% {
    transform: translateY(-100px) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) rotate(360deg);
    opacity: 0;
  }
}

/* Barra de progresso da batalha */
.battle-progress {
  width: 100%;
  max-width: 600px;
  margin: 20px auto;
  height: 16px; /* Aumentando a altura para maior destaque */
  background: #2c2c2c; /* Fundo mais escuro */
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); /* Sombra para profundidade */
  position: relative;
}

/* Barra de progresso dinâmica */
.progress-bar {
  height: 100%;
  width: 0;
  background: linear-gradient(90deg, #4CAF50, #8BC34A); /* Gradiente de verde */
  border-radius: 8px;
  transition: width 1s ease, background 1s ease; /* Animação suave para mudanças */
  position: relative;
  z-index: 1;
  box-shadow: 0 0 10px rgba(0, 255, 0, 0.7); /* Efeito de glow suave */
}

/* Efeitos de pulse quando a barra muda */
@keyframes pulse {
  0% {
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }
  50% {
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.7);
  }
  100% {
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.5);
  }
}

/* Adicionando o efeito pulse quando a barra atingir algum valor significativo */
.progress-bar.pulsing {
  animation: pulse 1s ease infinite;
}

/* Indicador de porcentagem sobre a barra */
.progress-bar::after {
  content: attr(data-progress) '%';
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 14px;
  font-weight: bold;
  color: white;
  z-index: 2;
}

/* Cores da barra com base no progresso (verde - vantagem / vermelho - desvantagem) */
.progress-bar.low {
  background: linear-gradient(90deg, #F44336, #D32F2F); /* Gradiente vermelho para desvantagem */
}

.progress-bar.medium {
  background: linear-gradient(90deg, #FF9800, #FF5722); /* Gradiente laranja para situação equilibrada */
}

.progress-bar.high {
  background: linear-gradient(90deg, #4CAF50, #8BC34A); /* Gradiente verde para vantagem */
}

/* Efeito de brilho nas extremidades da barra */
.battle-progress::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0));
  z-index: 0;
  animation: glowEffect 2s ease-in-out infinite alternate;
}

@keyframes glowEffect {
  0% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.7;
  }
}

